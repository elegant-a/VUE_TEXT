let job = ref({

type:'前端开发工程师',
salary:'30K'
})


//方法
   function changeInfo(){
   name.value = '李四'
   age.value = 48
   job.value.type.value = 'UI设计师'
}


要把对象里面的属性也变成响应式

ref对于基本数据类型用的是Object.defineProperty配合着get和set,变成了一个名为
Proxy的代理对象


2.ref函数
作用:定义一个响应式的数据
语法: const xxx = ref(initValue)
  创建一个包含响应式数据的引用对象(reference对象)
  JS中操作数据:xxx.value
  模板中读取数据:不需要.value,直接:<div>{{xxx}}</div>
备注:
  接收的数据类型可以是:基本类型,也可以是对象类型
  基本类型的数据:响应式依然是靠Object.defineProperty()的get与set完成的
  对象类型的数据:内部"求助"了Vue3.0中的一个新函数----reactive函数

