插槽
1.作用:让父组件可以向子组件指定位置插入html,也是一种组件间通信的方式,适用于 父组件 ===> 子组件
2.分类:默认插槽,具名插槽,作用域插槽
3.使用方式:
   1.默认插槽
     父组件:
          <Category>
                   <div>html结构1</div>..
           </Category>
       子组件中:
          <template>
                <div>
                    <slot>插槽默认内容...</slot>   
                </div>
           </template>
     2.具名插槽:
         父组件中:
               <Category>
                   <template slot="center">
                       <div>html结构1</div>
                   </template>

                    <template v-slot:footer>
                         <div>html结构2</div>
                    </template>
                  </Category>
          子组件中:
                  <template>
                           //定义插槽
                            <slot name="center">插槽默认内容</slot>
                            <slot name="footer">插槽默认内容</slot>
                 </temlate>

3.作用域插槽
1.理解:数据在组件的自身,但根数据生成的结构需要组件的使用者来决定.(games数据在Category组件中,但使用数据遍历出来的结构由App组件决定)


2.具体编码
父组件中:
             <Category>
                 <template scope="scopeData">
                    //生成的是ul列表
                      <ul>
                                 <li v-for="g in scopeData.games" :key="g">{{g}}</li>.
                      </ul>
                </template>
             </Category>
子组件中:
<slot :games="games" msg="hello">我是一些默认的内容</slot>

export default {
   name:'Category',
   props:['title'],
   //数据在子组件自身
   data(){
     return {
            games:['红色警戒','穿越火线','劲舞团','超级玛丽']
}  
}
}


也就是说默认插槽和具名插槽都是用的自身的数据生成的结构的
而作用域插槽,用的是子组件中的数据要生成默认结构,所以需要向父组件中传递数据



App.vue

.container
{
  display:flex;
  justify-content:space-around
}

Category.vue
<ul>
      <li v-for="(item,index) in listData" :key="index">{{item}}</li>
</ul>
export default
{
name:'App',
components:{Category},
data(){
   return {
    foods:['火锅','烧烤','小龙虾','牛排'],
    games:['红色警戒','穿越火线','劲舞团','超级玛丽']
    films:['<教父>','<拆弹专家>','你好,李焕英','尚硅谷']
}
}
}


<Category title="美食"  />
<Category title="游戏">
 <ul>
    <li v-for="(g,index) in games" :key="index">{{g}}</li>
  </ul>

</Category>
<Category title="电影" :listData="films" />




<slot name="xx"></slot>


