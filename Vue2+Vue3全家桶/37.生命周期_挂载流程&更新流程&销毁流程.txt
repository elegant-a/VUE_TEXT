常用的生命周期钩子:
1.mounted:发送ajax请求,启动定时器,绑定自定义事件,订阅消息等[初始化操作]
2.beforeDestroy:清楚定时器,解绑自定义事件,取消订阅消息等[收尾工作]

关于销毁Vue实例
1.销毁后借住Vue开发者工具看不到任何信息
2.销毁后自定义事件会失效,但原生DOM事件依旧有效
3.一般不会在beforeDestroy操作数据,因为即便操作数据,要不会再触发更新流程了

//生命周期_挂载流程
1.Vue.createApp({})

2.初始化:生命周期,事件,但数据代理还未开始

3.beforeCreate此时:无法通过vm访问到data中的数据,methods中的方法(beforeCreate)

4.初始化:数据监测,数据代理

5.可以通过vm访问到data中的数据,methods中配置的方法.(created)

6.此阶段Vue开始解析模板,生成虚拟DOM(内存中),页面还不能显示解析好的内容

7.页面呈现的是未经Vue编译的DOM结构,所有对DOM的操作,最终都不奏效

8.将内存中的 虚拟DOM转为真实DOM 插入页面

9.  (1)此时页面中呈现的是经过Vue编译的DOM.
     (2)对DOM的操作均有效(尽可能避免).至此初始化过程结束,一般在此进行:开启定时器,发送网络请求,订阅消息,绑定自定义事件,m等初始化操作
   
10.此时:数据是新的,但页面时旧的,即:页面尚未和数据保持同步(beforeUpdate)

//根据新数据,生成新的虚拟DOM，随后与旧的虚拟DOM进行比较,最终完成页面更新,即Model->View的更新

11.此时:数据是新的,页面也是新的,即:页面和数据保持同步(updated)

12.vm中所有的:data,methods,指令等等,都处于可用状态,马上执行销毁过程,一般在此阶段:关闭定时器
     //取消订阅消息,解绑自定义事件等收尾操作(beforeDestroy)











beforeDestroy(){
  
  console.log('beforeDestory')

}


Vue2不能有两个根节点


template是整个绿色框里面的东西,替换掉整个红色框里面的内容


<button @click="bye">点我销毁</button>


methods:{
  bye(){
   console.log('我被销毁了')
   this.$destroy()
}
}

vm临死之前的工作成果还在

完全销毁一个实例,清理掉雨其他实例的连接


//生命周期_总结
8个 4对
创建,挂载,更新,销毁
Vue应用

(重要)挂载完毕 ===>调用mounted函数.====>重要的钩子
(重要)将要销毁 ===>调用beforeDestroy函数.===>重要的钩子

let id
new Vue({
el:'#root'
})

methods:{
 stop(){
  clearInterval(id)
}
},

//Vue完成模板的解析并把初始的真实DOM元素放入页面后(挂载完毕)调用mounted



mounted(){
  console.log('mounted',this)

}


beforeDestory(){
clearInterval(this.timer)
console.log('vm即将驾鹤西游了')

}