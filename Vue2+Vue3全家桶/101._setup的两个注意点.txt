setup的两个注意点
 
<div class="demo">
 <h2>我是Demo组件</h2>

<Demo msg="你好啊">
</div>



<script>
export default{
name:'Demo'
}
</script>


<style>
.demo{
  background-color:orange;
  padding:10px;
}
</style>


Demo.vue

<script>
   export default{
     name:'Demo',
     props:['msg','school'],
     mounted(){
       console.log(this)
}
}



</script>

在子组件中的vc上,也就是VueComponet上有一个$属性
*********父组件中可以直接使用this.$attrs.xxx接收父组件传递过来的数据


export default {
 name:'Demo',
 props:['msg',''],
 setup(props,context){

 console.log('---setup---',context.attrs)

}



}


<Demo @hello="showHelloMsg" msg="你好啊" school="尚硅谷" />


setup(){

let methods = {

showHello:function(value){

alert(`你好啊,你触发了hello事件,我收到的参数是:${value}!`)

}
}
}


<Demo @hello="showHelloMsg" msg="你好啊" school="尚硅谷">
   <span>尚硅谷</span>
</Demo>


<template v-slot:qwe>
   <span>尚硅谷</span>
</template>


6.setup的两个注意点
setup执行的时机
      在beforeCreate之前执行一次,this是undefined
setup的参数
      props:值为对象,包含:组件外部传递过来,且组件内部声明接收了的属性
      context:上下文对象(this,当前的Vue组件)
       attrs:值为对象,包含:组件外部传递过来,但没有在props配置中声明的属性,相当于 this.$attrs
       slots:收到的插槽内容,相当于this.$slots
      emit:分发自定义事件的函数,相当于this.$emit
